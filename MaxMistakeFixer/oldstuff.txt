           

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ACTIVITY]", people_code_id);

                script_writer.WriteLine("-- table=SOURCEDETAIL taken care of by trigger in table=ACADEMIC");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ACADEMICINTEREST]", people_code_id);

                script_writer.WriteLine("-- table=TRANSCRIPTHEADER taken care of by trigger in table=ACADEMIC");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[STDDEGREQ]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TESTSCORES]", people_code_id);

                script_writer.WriteLine("-- table=STUDENTFINANCIAL already done it is a leaf-node table");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[RESIDENCY]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PERCONTRACT]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[EVENTPER]", people_code_id, "EVENTPER.PERSON_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[SECTIONPER]", people_code_id, "SECTIONPER.PERSON_CODE_ID");

                script_writer.WriteLine("-- NO NEED TO UPDATE table=STATEMENTLINE COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO NEED TO UPDATE table=CASHRECEIPT COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[STATEMENTHEADER]", people_code_id, "STATEMENTHEADER.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[CASHRECEIPT]", people_code_id, "CASHRECEIPT.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[CHARGECREDIT]", people_code_id, "CHARGECREDIT.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PAYMENTPLAN]", people_code_id, "PAYMENTPLAN.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLEORGBALANCE]", people_code_id, "PEOPLEORGBALANCE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ABT_USERS]", people_code_id);

                script_writer.WriteLine("-- NO NEED TO UPDATE ACADEMIC.ADVISOR COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO NEED TO UPDATE ACADEMIC.COUNSELOR COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO NEED TO UPDATE BUILDING COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ACTIONSCHEDULE]", people_code_id, "ACTIONSCHEDULE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[NOTES]", people_code_id, "NOTES.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[EDUCATION]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[EMPLOYMENT]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[SALUTATION]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLEORGATTRIBUTES]", people_code_id, "PEOPLEORGATTRIBUTES.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLEFORMERNAME]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLEGENERAL]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[FACULTY]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PLEDGE]", people_code_id, "PLEDGE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PRDTRACKING]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTPLEDGE]", people_code_id, "GIFTPLEDGE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTCREDITDESIGNATION]", people_code_id, "GIFTCREDITDESIGNATION.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTCREDITDESIGNATION]", people_code_id, "GIFTCREDITDESIGNATION.ASSOCIATED_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTCREDITDETAIL]", people_code_id, "GIFTCREDITDETAIL.ASSOCIATED_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIVINGSUMMARY]", people_code_id, "GIVINGSUMMARY.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTCLUB]", people_code_id, "GIFTCLUB.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTDEDICATIONS]", people_code_id, "GIFTDEDICATIONS.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTDEFERRED]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GIFTNONCASH]", people_code_id, "GIFTNONCASH.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[DEDICATIONS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[Government]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GOVTFINANCIAL]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[EXCHANGEVISITOR]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GovernmentNotes]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[IMMUNIZATION]", people_code_id);

                script_writer.WriteLine("-- table=PEOPLETYPE already done it is a leaf-node table");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PUBLICRELATIONS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[RELATIONSHIP]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[RELATIONSHIP]", people_code_id, "RELATIONSHIP.RELATION_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[SPOUSE]", people_code_id);

                script_writer.WriteLIne("-- table=MAILING already done it is a leaf-node table");

				script_writer.WriteLIne("-- table=[STOPLIST] no data checked by hand");
                
                script_writer.WriteLine("-- table=STUDENT already done it is a leaf-node table");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[DEMOGRAPHICS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[DISABILITY]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[DISABLEREQUIRE]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLEEMERGENCY]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ASSOCIATION]", people_code_id, "ASSOCIATION.PEOPLE_ORG_CODE_ID");

                script_writer.WriteLine("-- table=ADDRESS already done it is a leaf-node table");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ADDRESSSCHEDULE]", people_code_id, "ADDRESSSCHEDULE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ADDRESSHIERARCHYUNIQUE]", people_code_id, "ADDRESSHIERARCHYUNIQUE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ALUMNICLASS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ALUMNICLASSSUMMARY]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[CASETYPE]", people_code_id, "CASETYPE.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[COMBINEMAILING]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ADVANCENAME]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ADVPEOPLEFINANCE]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[SOLICITORINFO]", people_code_id, "SOLICITORINFO.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[ORGANIZATIONCONTACT]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PROSPECTRATING]", people_code_id, "PROSPECTRATING.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[AFFILIATIONS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[INDIVIDUALMATCHING]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[INDIVIDUALMATCHING]", people_code_id, "INDIVIDUALMATCHING.ASSOCIATED_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TELECOMMUNICATIONS]", people_code_id, "TELECOMMUNICATIONS.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[VOLUNTEERINTEREST]", people_code_id, "VOLUNTEERINTEREST.PEOPLE_ORG_CODE_ID");

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PFINTEGRATION]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PFIPROCESSID]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[USERDEFINEDIND]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TRANSCRIPTREQUEST]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TRANSCRIPTGRADING]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[GRADEMAPPING]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[WEBREGISTRATIONID]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[NSLCDETAIL]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TRANSCRIPTMARKETING]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TRANSCRIPTSOURCEDISCOUNT]", people_code_id);


                script_writer.WriteLine("-- NO DATA IN VIOLATIONS COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();


                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TranAttendance]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TranAttendanceSum]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[VIOLATIONSSUMMARY]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[TranAttendanceSum]", people_code_id);

                script_writer.WriteLine("-- NO DATA IN SPONSORSTUDENTS COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN SPONSORAGREEMENT COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[StudentAssess]", people_code_id);

                script_writer.WriteLine("-- NO DATA IN MEDIARIGHTS COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PeopleMetaData]", people_code_id);

                script_writer.WriteLine("-- NO DATA IN RATING COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[WAITLIST]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[INTERESTLEVELS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[INTERESTLEVELSHISTORY]", people_code_id);

                script_writer.WriteLine("-- NO DATA IN transcompgroup COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN transcompgroupevent COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN transcompetency COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN transcompsign COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN transcomptasksign COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN transcompcatnotes COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[COMPARISONRESULTS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[COMPARISONRESULTS]", people_code_id, "COMPARISONRESULTS.PEOPLE_CODE_ID2");


                script_writer.WriteLine("-- NO DATA IN REGISTRATIONPERMISSION COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();


                script_writer.WriteLine("-- NO DATA IN COUNSELOREXCEPTIONS COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN EPSCOUNSELORLINK COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN EPSACADEMIC COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN SPONSORSTUDENTWAIVER COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN SPONSORCHANGES COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN TRANSACTIONS COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLESCHOLARSHIP]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLESCHOLARSHIPREQS]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLESCHOLARSHIPNOTES]", people_code_id);

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[FULLPARTHISTORY]", people_code_id);

                script_writer.WriteLine("-- NO DATA IN StudentProxy COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN StudentProxyRequest COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN StudentProxyHistory COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN AddressApprovalRequest COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN Application COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN Inquiry COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[Reported1098TInformation]", people_code_id);

                script_writer.WriteLine("-- NO DATA IN BlockWebRegGroups COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN BlockWebRegGroupSections COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN BlockWebRegRules COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN BlockWebRegRuleGroups COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN BlockWebRegisteredPeople COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN InvoiceHeader COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN InvoicePreferredTaxpayer COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN SharedAdvisee COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN SharedAdviseeHistory COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN AssignmentTemplateShare COULD NOT FIND ROWS");
                script_writer.WriteLine();
                script_writer.WriteLine();

                script_writer.WriteLine("-- NO DATA IN DeletedChargeCredit COULD NOT FIND ROWS with those peoplecodeid");
                script_writer.WriteLine();
                script_writer.WriteLine();

                


				script_writer.WriteLine("SET IDENTITY_INSERT [Campus8_ceeb].[dbo].[PEOPLE] ON");
                DoQuery(ref script_writer, ref conn, "[Campus8_ceeb].[dbo].[PEOPLE]", people_code_id);
                script_writer.WriteLine("SET IDENTITY_INSERT [Campus8_ceeb].[dbo].[PEOPLE] OFF");


